kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    deployment.kubernetes.io/revision: '2'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"redhat-airline-booking-api:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"redhat-airline-booking-api\")].image"}]
  name: booking-api
  labels:
    app: booking-api
    app.kubernetes.io/name: nodejs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: booking-api
      deployment: booking-api
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: booking-api
        deployment: booking-api
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
    spec:
      containers:
        - name: redhat-airline-booking-api
          image: quay.io/aibrahim/redhat-airline-booking-api:{{ .Values.version }}
          ports:
            - containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: booking-api-conf
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

